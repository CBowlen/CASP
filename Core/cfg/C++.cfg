block =:
\{\s*<statement-list>\s*\}

statement-list =:
(<statement>\s*)+

statement =:
<expression>\s*;

expression =:
<declaration-assignment>|<declaration>|<assignment>

declaration-assignment =:
<typedef>\s*<identifier>\s*=\s*<value>

declaration =:
<typedef>\s*<identifier>

assignment =:
<identifier>\s*=\s*<value>

value =:
<int-literal>|<float-literal>|<string-literal>|<identifier>

typedef =:
(<primitive-type>|<identifier>)(\s*\*)*

identifier =:
<non-digit>(<digit>|<non-digit>)*

primitive-type =:
<int-primitive>|<float-primitive>|<fixed-primitive>|<char-primitive>|<bool-primitive>

int-primitive =:
(int)|(long)|(short)|(byte)|(integer)

float-primitive =:
(float)|(double)|(real)|(double\s+precision)

fixed-primitive =:
fixed

char-primitive =:
char(acter)?

bool-primitive =:
bool(ean)?

int-literal =:
<digit>+

float-literal =:
(<digit>+\\.<digit>*)|(<digit>*\\.<digit>+)

string-literal =:
"([^"]\\"?)*"

non-digit =:
[a-zA-Z_]

digit =:
[0-9]

hexadecimal-digit =:
[0-9a-fA-F]
